#ifndef _SIMPL_DRIVER_HPP
#define _SIMPL_DRIVER_HPP
#include <string>
#include "ast.hpp"
#include "simpl-lang.hpp"

// Tell Flex the lexer's prototype ...
#define YY_DECL \
  yy::Parser::token_type yylex(yy::Parser::semantic_type* yylval, \
                 yy::Parser::location_type* yylloc, \
                 Simpl_driver& driver)

// ... and declare it for the parser's sake.
YY_DECL;

class Simpl_driver
{
public:
  Simpl_driver();
  virtual ~Simpl_driver();

  int result;

  bool trace_scanning;

  void scan_begin();
  void scan_end();
  
  int parse(const std::string& f);

  // Whether parser traces should be generated.
  bool trace_parsing;
  
  // Whether AST nodes should be generated by parser.
  bool AST_dumping;
    
  // Whether XML nodes should be generated by parser.
  bool XML_dumping;
  std::string XML_dumping_path;

  // The name of the file being parsed.
  // Used later to pass the file name to the location tracker.
  std::string filename;

  // Error handling.
  void error(const yy::location& l, const std::string& err_message);
  void error(const std::string& err_message);
};

#endif
